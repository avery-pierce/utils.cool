{"version":3,"file":"component---src-pages-timer-js-442b22e71ae09657732a.js","mappings":"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","sources":["webpack://utils-cool/./src/components/CoolMobileFullscreenLayout.js","webpack://utils-cool/./src/components/CoolText.js","webpack://utils-cool/./src/pages/timer.js","webpack://utils-cool/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://utils-cool/./src/hooks/useCurrentDate.js"],"sourcesContent":["import React from \"react\"\nimport coolGradient from \"./coolGradient\"\n\nexport default function CoolMobileFullscreenLayout({ children, style }) {\n  return (\n    <div style={{ \n      display: \"flex\", \n      position: \"fixed\", \n      top: 0, \n      left: 0, \n      bottom: 0, \n      right: 0, \n      flex: 1, \n      flexDirection: \"column\",\n      ...style,\n    }}>\n      {children}\n    </div>\n  )\n}","import React from \"react\"\n\nexport function CoolTitle({ children, style }) {\n  return (\n    <h1 style={{\n      fontFamily: \"Monoton\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      fontSize: \"30pt\",\n      color: \"#FFF\",\n      ...style\n    }}>{children}</h1>\n  )\n}\n\nexport default function CoolText({ children, style, bold }) {\n  return (\n    <span style={{\n      fontFamily: \"Roboto\",\n      fontWeight: bold ? \"500\" : \"normal\",\n      color: \"#FFF\",\n      ...style,\n    }}>\n      {children}\n    </span>\n  )\n}","import React, { useCallback, useState } from 'react';\nimport CoolMobileFullscreenLayout from '../components/CoolMobileFullscreenLayout';\nimport useCurrentDate from \"../hooks/useCurrentDate\"\nimport CoolText from '../components/CoolText';\n\nconst Timer = () => {\n  const [startDate, setStartDate] = useState(null)\n  const [stopDate, setStopDate] = useState(null)\n  const [laps, setLaps] = useState([])\n  \n  const elapsed = useSecondsElapsed(startDate, stopDate)\n  const onStart = useCallback(() => {\n    setStartDate(new Date()) \n    setStopDate(null)\n    setLaps([])\n  }, [])\n\n  const onStop = useCallback(() => {\n    setStopDate(new Date())\n  }, [])\n\n  const onTapLap = useCallback(() => {\n    setLaps((prevLaps) => {\n      return [\n        ...prevLaps,\n        new Date()\n      ]\n    })\n  }, [])\n\n  const lapD = lapDeltas(startDate, laps)\n\n  const isTimerRunning = (!!startDate && !stopDate)\n\n  return (\n    <CoolMobileFullscreenLayout>\n      <div style={{ flexGrow: 1 }}>\n      </div>\n      <div style={{ padding: \"1em\", flexShrink: 2 }}>\n        <div style={{\n          background: \"rgba(233, 233, 233, 0.65)\",\n          boxShadow: \"0px 4px 12px rgba(0, 0, 0, 0.2)\",\n          borderRadius: 8,\n          padding: \"1em\",\n        }}>\n          {lapD.map((lapTime, i) => (\n            <LapDetail \n              index={i} \n              durationSeconds={lapTime.duration / 1000} \n              deltaSeconds={lapTime.delta / 1000} \n              timestamp={lapTime.date} />\n          ))}\n        </div>\n      </div>\n      <div style={{ padding: \"1em\" }}>\n        <CoolText bold style={{\n          display: \"block\",\n          textAlign: \"center\",\n          fontSize: \"60pt\",\n        }}>{formatTimeInterval(elapsed)}</CoolText>\n      </div>\n      <StopwatchControls\n        onStart={onStart}\n        onStop={onStop}\n        onLap={onTapLap}\n        isTimerRunning={isTimerRunning} />\n    </CoolMobileFullscreenLayout>\n  )\n}\n\nconst secondFormatter = new Intl.NumberFormat(\"en-US\", { \n  minimumIntegerDigits: 2, \n  minimumFractionDigits: 2, \n  maximumFractionDigits: 2,\n})\n\nfunction formatTimeInterval(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  const formattedSeconds = secondFormatter.format(remainingSeconds)\n  return `${minutes}:${formattedSeconds}`\n}\n\nfunction StopwatchControls({ onStart, onStop, onLap, isTimerRunning }) {\n  return(\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {!isTimerRunning && <CoolButton onClick={onStart} style={{ flex: 1, margin: \"1em\", backgroundColor: \"green\" }}>Start</CoolButton>}\n      {isTimerRunning && <CoolButton onClick={onLap} style={{ flex: 1, margin: \"1em\", backgroundColor: \"blue\" }}>Lap</CoolButton>}\n      <CoolButton disabled={!isTimerRunning} onClick={onStop} style={{ flex: 1, margin: \"1em\", marginLeft: 0, backgroundColor: \"red\" }}>Stop</CoolButton>\n    </div>\n  )\n}\n\nfunction CoolButton({ children, onClick, style, disabled, ...props}) {\n  return (\n    <button onClick={onClick} style={{\n      height: \"7em\",\n      borderRadius: 8,\n      fontSize: \"15pt\",\n      border: \"none\",\n      textTransform: \"uppercase\",\n      fontWeight: \"bold\",\n      opacity: disabled ? 0.4 : 1.0,\n      ...style,\n    }}>{children}</button>\n  )\n}\n\nfunction lapDeltas(startTime, lapTimes) {\n  const lapDurations = lapTimes.map((date, i, allTimes) => {\n    const previousStop = (i === 0 ? startTime : allTimes[i - 1])\n    const lapDuration = date.getTime() - previousStop.getTime()\n    return {\n      date,\n      duration: lapDuration,\n    }\n  })\n  return lapDurations.map((duration, i, allDurations) => {\n    if (i === 0) {\n      return {\n        ...duration,\n        delta: null,\n      }\n    } else {\n      console.log(\"d\", duration)\n      const prevDuration = allDurations[i - 1]\n      console.log(\"prev\", prevDuration)\n      const delta = duration.duration - prevDuration.duration\n      console.log(\"delta\", delta)\n      return {\n        ...duration,\n        delta,\n      }\n    }\n  })\n}\n\nfunction LapDetail({ index, timestamp, durationSeconds, deltaSeconds }) {\n  return (\n    <div style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      margin: \"0.6em auto\",\n    }}>\n      <div style={{\n        paddingRight: \"0.4em\",\n        marginRight: \"0.4em\",\n        borderRight: \"solid 0.5px rgba(0, 0, 0, 0.5)\",\n      }}>\n        <CoolText style={{ color: \"black\" }}>{index+1}</CoolText>\n      </div>\n      <div style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}>\n        <span style={{fontSize: \"1.2em\"}}>\n          <CoolText style={{color: \"black\", fontWeight: \"bold\", marginRight: \"0.4em\"}}>{durationSeconds}s</CoolText>\n          <CoolText style={{color: \"black\" }}>(<CoolText style={{ color: deltaSeconds > 0 ? \"red\" : \"green\" }}>{deltaSeconds}</CoolText>)</CoolText>\n        </span>\n        <CoolText style={{color: \"black\", opacity: 0.6}}>{timestamp.toLocaleString()}</CoolText>\n      </div>\n    </div>\n  )\n}\n\nfunction deltaS(date1, date2) {\n  const deltams = Math.abs(date1.getTime() - date2.getTime())\n  return deltams / 1000\n}\n\nfunction useSecondsElapsed(startDate, stopDate) {\n  const currentDate = useCurrentDate(30)\n\n  if (!startDate) {\n    return 0;\n  }\n\n  const compareDate = stopDate || currentDate\n  const ms = compareDate.getTime() - startDate.getTime()\n  return ms / 1000\n}\n\nexport default Timer;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useState, useEffect } from \"react\"\n\nexport default function useCurrentDate(refreshRateHz = 60) {\n  const [date, setDate] = useState(new Date())\n\n  useEffect(() => {\n    const handle = setInterval(() => {\n      setDate(new Date())\n    }, 1000/refreshRateHz)\n\n    return () => clearInterval(handle)\n  }, [refreshRateHz])\n\n  return date\n}"],"names":["CoolMobileFullscreenLayout","children","style","display","position","top","left","bottom","right","flex","flexDirection","CoolText","bold","fontFamily","fontWeight","color","secondFormatter","Intl","NumberFormat","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","StopwatchControls","onStart","onStop","onLap","isTimerRunning","CoolButton","onClick","margin","backgroundColor","disabled","marginLeft","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","height","borderRadius","fontSize","border","textTransform","opacity","LapDetail","index","timestamp","durationSeconds","deltaSeconds","paddingRight","marginRight","borderRight","toLocaleString","startTime","seconds","minutes","remainingSeconds","formattedSeconds","useState","startDate","setStartDate","stopDate","setStopDate","laps","setLaps","elapsed","currentDate","refreshRateHz","Date","date","setDate","useEffect","handle","setInterval","clearInterval","useCurrentDate","getTime","useSecondsElapsed","useCallback","onTapLap","prevLaps","lapD","map","allTimes","previousStop","lapDuration","duration","allDurations","delta","console","log","prevDuration","flexGrow","padding","flexShrink","background","boxShadow","lapTime","textAlign","Math","floor","format"],"sourceRoot":""}