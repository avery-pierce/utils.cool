{"version":3,"file":"component---src-pages-timezone-tsx-df68c0f01f9578b5c85c.js","mappings":"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CA,iBACA,gBACA,oBACA,uBACA,iBACA,mBACA,sBACA,oBACA,iBACA,mBACA,qBACA,iBACA,eACA,eACA,iBACA,mBACA,kBACA,oBACA,kBACA,oBACA,uBACA,kBACA,kBACA,sBACA,kBACA,sBACA,mBACA,mBACA,sBACA,mBACA,uBACA,iBACA,wBACA,mBACA,wBACA,sBACA,iBACA,kBACA,uBACA,sBACA,oBACA,qBACA,iBACA,eACA,gBACA,iBACA,oBACA,mBACA,uBACA,iBACA,gBACA,cACA,iBACA,qBACA,iBACA,sBACA,kBACA,mBACA,eACA,iBACA,gBACA,gBACA,oBACA,wBACA,iBACA,oBACA,oBACA,iBACA,eACA,kBACA,gBACA,eACA,kBACA,kBACA,eACA,mBACA,gBACA,kBACA,iBACA,iBACA,eACA,gBACA,eACA,kBACA,eACA,mBACA,kBACA,uBACA,uBACA,gBACA,gBACA,yBACA,oBACA,eACA,gBACA,iBACA,iBACA,sBACA,yBACA,kBACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,eACA,gBACA,eACA,cACA,qBACA,cACA,kBACA,aACA,aACA,iBACA,eACA,iBACA,oBACA,qBACA,iBACA,aACA,cACA,iBACA,gBACA,cACA,aACA,cACA,YACA,cACA,eACA,kBACA,iBACA,oBACA,cACA,iBACA,oBACA,gBACA,kBACA,iBACA,oBACA,cACA,mBACA,YACA,kBACA,aACA,qBACA,eACA,mBACA,kBACA,sBACA,iBACA,iBACA,oBACA,oBACA,mBACA,oBACA,kBACA,qBACA,kBACA,yBACA,oBACA,eACA,gBACA,kBACA,iBACA,kBACA,eACA,kBACA,mBACA,cACA,iBACA,gBACA,eACA,mBACA,kBACA,iBACA,eACA,iBACA,oBACA,kBACA,uBACA,uBACA,cACA,eACA,gBACA,mBACA,mBACA,sBACA,YACA,cACA,gBACA,mBACA,kBACA,gBACA,mBACA,aACA,iBACA,mBACA,kBACA,qBACA,gBACA,oBACA,eACA,mBACA,mBACA,iBACA,mBACA,gBACA,qBACA,YACA,mBACA,eACA,aACA,oBACA,mBACA,eACA,aACA,eACA,gBACA,mBACA,gBACA,eACA,gBACA,qBACA,iBACA,cACA,cACA,sBACA,cACA,kBACA,mBACA,iBACA,qBACA,cACA,kBACA,sBACA,gBACA,qBACA,kBACA,mBACA,eACA,gBACA,kBACA,YACA,gBACA,eACA,oBACA,kBACA,wBACA,mBACA,cACA,cACA,kBACA,oBACA,eACA,mBACA,kBACA,8BACA,8BACA,+BACA,4BACA,0BACA,0BACA,6BACA,wBACA,kBACA,4BACA,uBACA,oBACA,8BACA,iCACA,8BACA,iBACA,gBACA,kBACA,sBACA,oBACA,iBACA,gBACA,qBACA,kBACA,eACA,eACA,mBACA,qBACA,iBACA,gBACA,kBACA,mBACA,gBACA,iBACA,eACA,uBCtVIsB,EAAmBC,KAAKC,eAAe,IAAIC,kBAAkBC,SAEpD,SAASC,IACtB,IAAMC,EAAa3B,EAAeD,EAAeG,QACjD,GAA0C7C,EAAAA,EAAAA,IAAqB,8BAA+B,uBAAvFuE,EAAP,KAAsBC,EAAtB,KAEMC,EAAYC,EAAWV,EAAkBM,GACzCK,EAAgBD,EAAWH,EAAeD,GAEhD,OACE,gCACE,2BAAK,gBAACxE,EAAA,EAAD,mBAAsBkE,EAAtB,QAA6CS,IAClD,2BAAK,gBAAC3E,EAAA,EAAD,gCAAkC,0BAAQa,MAAO4D,EAAeK,SAAU,SAACC,GAAD,OAAOL,EAAiBK,EAAEC,OAAOnE,SAC3GoE,EAAAA,KAAmB,SAACC,GAAD,OAAQ,0BAAQrE,MAAOqE,GAAKA,SAEpD,2BAAK,gBAAClF,EAAA,EAAD,oBAAuByE,EAAvB,OAA0CI,KAKrD,SAASD,EAAWN,EAAkBrC,GACpC,OAAOkC,KAAKC,eAAe,GAAI,CAAEE,SAAAA,EAAUa,UAAW,SAAUC,OAAOnD","sources":["webpack://utils-cool/./src/components/CoolText.tsx","webpack://utils-cool/./src/hooks/useLocalStorageState.ts","webpack://utils-cool/./src/hooks/useSystemClock.ts","webpack://utils-cool/./src/ref/allTimeZones.ts","webpack://utils-cool/./src/pages/timezone.tsx"],"sourcesContent":["import React, { CSSProperties, ReactNode } from \"react\"\n\nexport function CoolTitle({ children, style }: { \n  children?: ReactNode | undefined,\n  style: CSSProperties\n}) {\n  return (\n    <h1 style={{\n      fontFamily: \"Monoton\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      fontSize: \"30pt\",\n      color: \"#FFF\",\n      ...style\n    }}>{children}</h1>\n  )\n}\n\nexport default function CoolText({ children, style, bold }: {\n  children?: ReactNode | undefined,\n  style?: CSSProperties,\n  bold?: boolean\n}) {\n  return (\n    <span style={{\n      fontFamily: \"Roboto\",\n      fontWeight: bold ? 500 : \"normal\",\n      color: \"#FFF\",\n      ...style,\n    }}>\n      {children}\n    </span>\n  )\n}","import { useCallback, useState } from \"react\"\n\n/// Works like `useState`, except values are persisted to localStorage.\nexport default function useLocalStorageState<S>(key: string, defaultValue: S, serialize: (state: S) => any = (v) => v, deserialize: (localStoageObj: any) => S = (v) => v) {\n\n  // getLocalObject doesn't differentiate between explicitly setting null\n  // and state that's never been set. Use isLocalObjectPopulated to affirmatively\n  // determine whether state has ever been set.\n  const initialValue = isLocalObjectPopulated(key) ? deserialize(getLocalObject(key)) : defaultValue\n  const [state, setState] = useState(initialValue)\n\n  const setLocalStorageState = useCallback((newValue: S) => {\n    const normalizedValue = serialize(newValue)\n    setLocalObject(key, normalizedValue)\n    setState(newValue)\n  }, [])\n\n  const resetLocalStorageState = useCallback(() => {\n    removeLocalObject(key)\n  }, [])\n\n  return [state, setLocalStorageState, resetLocalStorageState] as const\n}\n\n/// Deserialize the json object stored in local storage\nfunction getLocalObject(key: string) {\n  if (typeof window === \"undefined\") return null\n  const value = window.localStorage.getItem(key)\n  return JSON.parse(value)\n}\n\n/// Returns `true` if this key has never been populated.\nfunction isLocalObjectPopulated(key: string) {\n  if (typeof window === \"undefined\") return false\n  return window.localStorage.getItem(key) !== null\n}\n\n/// Set a JSON object to local storage state\nfunction setLocalObject(key: string, obj: any) {\n  if (typeof window === \"undefined\") return\n  const stringified = JSON.stringify(obj)\n  return window.localStorage.setItem(key, stringified)\n}\n\n/// Removes the value at this key from storage\nfunction removeLocalObject(key: string) {\n  if (typeof window === \"undefined\") return\n  return window.localStorage.removeItem(key)\n}\n\nexport const dateSerilaizer = (date: Date) => {\n  if (date === null) { return null }\n  return date.getTime()\n}\n\nexport const dateDeserializer = (ms: number | null) => {\n  if (ms === null) { return null }\n  return new Date(ms)\n}\n\nexport const arraySerializer = <T>(elementSerializer: (el: T) => any) => {\n  return (array: T[]) => {\n    return array.map(elementSerializer)\n  }\n}\n\nexport const arrayDeserializer = <T>(elementDeserializer: (el: any) => T) => {\n  return (array: any[]) => {\n    return array.map(elementDeserializer)\n  }\n}","import { useEffect, useState } from \"react\";\n\nexport enum ClockPrecision {\n  SECOND,\n  MINUTE,\n  HOUR,\n}\n\n/// Returns the current system time, updating only when the value at precision changes.\n/// The effect is that this hook triggers a re-render in sync with the system clock time.\nexport default function useSystemClock(precision: ClockPrecision = ClockPrecision.SECOND) {\n  const [cachedTime, setCachedTime] = useState(new Date())\n\n  useEffect(() => {\n\n    let handle: NodeJS.Timeout\n\n    const scheduleUpdate = () => {\n      const delay = millisecondsUntilNextUpdate(new Date(), precision)\n      handle = setTimeout(() => {\n        setCachedTime(new Date())\n        scheduleUpdate()\n      }, delay)\n    }\n\n    scheduleUpdate()\n    return () => clearTimeout(handle)\n  }, [precision])\n\n  return cachedTime\n}\n\nfunction millisecondsUntilNextUpdate(referenceDate: Date = new Date(), precision: ClockPrecision) {\n  const millisecondsUntilNextSecond = 1000 - referenceDate.getMilliseconds()\n  if (precision === ClockPrecision.SECOND) {\n    return millisecondsUntilNextSecond\n  }\n\n  const secondsUntilNextMinute = 60 - referenceDate.getSeconds()\n  if (precision === ClockPrecision.MINUTE) {\n    return (secondsUntilNextMinute * 1000) - referenceDate.getMilliseconds()\n  }\n\n  const minutesUntilNextHour = 60 - referenceDate.getMinutes()\n  if (precision === ClockPrecision.HOUR) {\n    return (minutesUntilNextHour * 60 * 1000) -\n      referenceDate.getSeconds() -\n      referenceDate.getMilliseconds()\n      \n  }\n\n  return null\n}","const ALL_TIME_ZONES = [\n  'Europe/Andorra',\n  'Asia/Dubai',\n  'Asia/Kabul',\n  'Europe/Tirane',\n  'Asia/Yerevan',\n  'Antarctica/Casey',\n  'Antarctica/Davis',\n  'Antarctica/DumontDUrville', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\n  'Antarctica/Mawson',\n  'Antarctica/Palmer',\n  'Antarctica/Rothera',\n  'Antarctica/Syowa',\n  'Antarctica/Troll',\n  'Antarctica/Vostok',\n  'America/Argentina/Buenos_Aires',\n  'America/Argentina/Cordoba',\n  'America/Argentina/Salta',\n  'America/Argentina/Jujuy',\n  'America/Argentina/Tucuman',\n  'America/Argentina/Catamarca',\n  'America/Argentina/La_Rioja',\n  'America/Argentina/San_Juan',\n  'America/Argentina/Mendoza',\n  'America/Argentina/San_Luis',\n  'America/Argentina/Rio_Gallegos',\n  'America/Argentina/Ushuaia',\n  'Pacific/Pago_Pago',\n  'Europe/Vienna',\n  'Australia/Lord_Howe',\n  'Antarctica/Macquarie',\n  'Australia/Hobart',\n  'Australia/Currie',\n  'Australia/Melbourne',\n  'Australia/Sydney',\n  'Australia/Broken_Hill',\n  'Australia/Brisbane',\n  'Australia/Lindeman',\n  'Australia/Adelaide',\n  'Australia/Darwin',\n  'Australia/Perth',\n  'Australia/Eucla',\n  'Asia/Baku',\n  'America/Barbados',\n  'Asia/Dhaka',\n  'Europe/Brussels',\n  'Europe/Sofia',\n  'Atlantic/Bermuda',\n  'Asia/Brunei',\n  'America/La_Paz',\n  'America/Noronha',\n  'America/Belem',\n  'America/Fortaleza',\n  'America/Recife',\n  'America/Araguaina',\n  'America/Maceio',\n  'America/Bahia',\n  'America/Sao_Paulo',\n  'America/Campo_Grande',\n  'America/Cuiaba',\n  'America/Santarem',\n  'America/Porto_Velho',\n  'America/Boa_Vista',\n  'America/Manaus',\n  'America/Eirunepe',\n  'America/Rio_Branco',\n  'America/Nassau',\n  'Asia/Thimphu',\n  'Europe/Minsk',\n  'America/Belize',\n  'America/St_Johns',\n  'America/Halifax',\n  'America/Glace_Bay',\n  'America/Moncton',\n  'America/Goose_Bay',\n  'America/Blanc-Sablon',\n  'America/Toronto',\n  'America/Nipigon',\n  'America/Thunder_Bay',\n  'America/Iqaluit',\n  'America/Pangnirtung',\n  'America/Atikokan',\n  'America/Winnipeg',\n  'America/Rainy_River',\n  'America/Resolute',\n  'America/Rankin_Inlet',\n  'America/Regina',\n  'America/Swift_Current',\n  'America/Edmonton',\n  'America/Cambridge_Bay',\n  'America/Yellowknife',\n  'America/Inuvik',\n  'America/Creston',\n  'America/Dawson_Creek',\n  'America/Fort_Nelson',\n  'America/Vancouver',\n  'America/Whitehorse',\n  'America/Dawson',\n  'Indian/Cocos',\n  'Europe/Zurich',\n  'Africa/Abidjan',\n  'Pacific/Rarotonga',\n  'America/Santiago',\n  'America/Punta_Arenas',\n  'Pacific/Easter',\n  'Asia/Shanghai',\n  'Asia/Urumqi',\n  'America/Bogota',\n  'America/Costa_Rica',\n  'America/Havana',\n  'Atlantic/Cape_Verde',\n  'America/Curacao',\n  'Indian/Christmas',\n  'Asia/Nicosia',\n  'Asia/Famagusta',\n  'Europe/Prague',\n  'Europe/Berlin',\n  'Europe/Copenhagen',\n  'America/Santo_Domingo',\n  'Africa/Algiers',\n  'America/Guayaquil',\n  'Pacific/Galapagos',\n  'Europe/Tallinn',\n  'Africa/Cairo',\n  'Africa/El_Aaiun',\n  'Europe/Madrid',\n  'Africa/Ceuta',\n  'Atlantic/Canary',\n  'Europe/Helsinki',\n  'Pacific/Fiji',\n  'Atlantic/Stanley',\n  'Pacific/Chuuk',\n  'Pacific/Pohnpei',\n  'Pacific/Kosrae',\n  'Atlantic/Faroe',\n  'Europe/Paris',\n  'Europe/London',\n  'Asia/Tbilisi',\n  'America/Cayenne',\n  'Africa/Accra',\n  'Europe/Gibraltar',\n  'America/Godthab',\n  'America/Danmarkshavn',\n  'America/Scoresbysund',\n  'America/Thule',\n  'Europe/Athens',\n  'Atlantic/South_Georgia',\n  'America/Guatemala',\n  'Pacific/Guam',\n  'Africa/Bissau',\n  'America/Guyana',\n  'Asia/Hong_Kong',\n  'America/Tegucigalpa',\n  'America/Port-au-Prince',\n  'Europe/Budapest',\n  'Asia/Jakarta',\n  'Asia/Pontianak',\n  'Asia/Makassar',\n  'Asia/Jayapura',\n  'Europe/Dublin',\n  'Asia/Jerusalem',\n  'Asia/Kolkata',\n  'Indian/Chagos',\n  'Asia/Baghdad',\n  'Asia/Tehran',\n  'Atlantic/Reykjavik',\n  'Europe/Rome',\n  'America/Jamaica',\n  'Asia/Amman',\n  'Asia/Tokyo',\n  'Africa/Nairobi',\n  'Asia/Bishkek',\n  'Pacific/Tarawa',\n  'Pacific/Enderbury',\n  'Pacific/Kiritimati',\n  'Asia/Pyongyang',\n  'Asia/Seoul',\n  'Asia/Almaty',\n  'Asia/Qyzylorda',\n  'Asia/Qostanay', // https://bugs.chromium.org/p/chromium/issues/detail?id=928068\n  'Asia/Aqtobe',\n  'Asia/Aqtau',\n  'Asia/Atyrau',\n  'Asia/Oral',\n  'Asia/Beirut',\n  'Asia/Colombo',\n  'Africa/Monrovia',\n  'Europe/Vilnius',\n  'Europe/Luxembourg',\n  'Europe/Riga',\n  'Africa/Tripoli',\n  'Africa/Casablanca',\n  'Europe/Monaco',\n  'Europe/Chisinau',\n  'Pacific/Majuro',\n  'Pacific/Kwajalein',\n  'Asia/Yangon',\n  'Asia/Ulaanbaatar',\n  'Asia/Hovd',\n  'Asia/Choibalsan',\n  'Asia/Macau',\n  'America/Martinique',\n  'Europe/Malta',\n  'Indian/Mauritius',\n  'Indian/Maldives',\n  'America/Mexico_City',\n  'America/Cancun',\n  'America/Merida',\n  'America/Monterrey',\n  'America/Matamoros',\n  'America/Mazatlan',\n  'America/Chihuahua',\n  'America/Ojinaga',\n  'America/Hermosillo',\n  'America/Tijuana',\n  'America/Bahia_Banderas',\n  'Asia/Kuala_Lumpur',\n  'Asia/Kuching',\n  'Africa/Maputo',\n  'Africa/Windhoek',\n  'Pacific/Noumea',\n  'Pacific/Norfolk',\n  'Africa/Lagos',\n  'America/Managua',\n  'Europe/Amsterdam',\n  'Europe/Oslo',\n  'Asia/Kathmandu',\n  'Pacific/Nauru',\n  'Pacific/Niue',\n  'Pacific/Auckland',\n  'Pacific/Chatham',\n  'America/Panama',\n  'America/Lima',\n  'Pacific/Tahiti',\n  'Pacific/Marquesas',\n  'Pacific/Gambier',\n  'Pacific/Port_Moresby',\n  'Pacific/Bougainville',\n  'Asia/Manila',\n  'Asia/Karachi',\n  'Europe/Warsaw',\n  'America/Miquelon',\n  'Pacific/Pitcairn',\n  'America/Puerto_Rico',\n  'Asia/Gaza',\n  'Asia/Hebron',\n  'Europe/Lisbon',\n  'Atlantic/Madeira',\n  'Atlantic/Azores',\n  'Pacific/Palau',\n  'America/Asuncion',\n  'Asia/Qatar',\n  'Indian/Reunion',\n  'Europe/Bucharest',\n  'Europe/Belgrade',\n  'Europe/Kaliningrad',\n  'Europe/Moscow',\n  'Europe/Simferopol',\n  'Europe/Kirov',\n  'Europe/Astrakhan',\n  'Europe/Volgograd',\n  'Europe/Saratov',\n  'Europe/Ulyanovsk',\n  'Europe/Samara',\n  'Asia/Yekaterinburg',\n  'Asia/Omsk',\n  'Asia/Novosibirsk',\n  'Asia/Barnaul',\n  'Asia/Tomsk',\n  'Asia/Novokuznetsk',\n  'Asia/Krasnoyarsk',\n  'Asia/Irkutsk',\n  'Asia/Chita',\n  'Asia/Yakutsk',\n  'Asia/Khandyga',\n  'Asia/Vladivostok',\n  'Asia/Ust-Nera',\n  'Asia/Magadan',\n  'Asia/Sakhalin',\n  'Asia/Srednekolymsk',\n  'Asia/Kamchatka',\n  'Asia/Anadyr',\n  'Asia/Riyadh',\n  'Pacific/Guadalcanal',\n  'Indian/Mahe',\n  'Africa/Khartoum',\n  'Europe/Stockholm',\n  'Asia/Singapore',\n  'America/Paramaribo',\n  'Africa/Juba',\n  'Africa/Sao_Tome',\n  'America/El_Salvador',\n  'Asia/Damascus',\n  'America/Grand_Turk',\n  'Africa/Ndjamena',\n  'Indian/Kerguelen',\n  'Asia/Bangkok',\n  'Asia/Dushanbe',\n  'Pacific/Fakaofo',\n  'Asia/Dili',\n  'Asia/Ashgabat',\n  'Africa/Tunis',\n  'Pacific/Tongatapu',\n  'Europe/Istanbul',\n  'America/Port_of_Spain',\n  'Pacific/Funafuti',\n  'Asia/Taipei',\n  'Europe/Kiev',\n  'Europe/Uzhgorod',\n  'Europe/Zaporozhye',\n  'Pacific/Wake',\n  'America/New_York',\n  'America/Detroit',\n  'America/Kentucky/Louisville',\n  'America/Kentucky/Monticello',\n  'America/Indiana/Indianapolis',\n  'America/Indiana/Vincennes',\n  'America/Indiana/Winamac',\n  'America/Indiana/Marengo',\n  'America/Indiana/Petersburg',\n  'America/Indiana/Vevay',\n  'America/Chicago',\n  'America/Indiana/Tell_City',\n  'America/Indiana/Knox',\n  'America/Menominee',\n  'America/North_Dakota/Center',\n  'America/North_Dakota/New_Salem',\n  'America/North_Dakota/Beulah',\n  'America/Denver',\n  'America/Boise',\n  'America/Phoenix',\n  'America/Los_Angeles',\n  'America/Anchorage',\n  'America/Juneau',\n  'America/Sitka',\n  'America/Metlakatla',\n  'America/Yakutat',\n  'America/Nome',\n  'America/Adak',\n  'Pacific/Honolulu',\n  'America/Montevideo',\n  'Asia/Samarkand',\n  'Asia/Tashkent',\n  'America/Caracas',\n  'Asia/Ho_Chi_Minh',\n  'Pacific/Efate',\n  'Pacific/Wallis',\n  'Pacific/Apia',\n  'Africa/Johannesburg'\n]\n\nexport default ALL_TIME_ZONES","import React from \"react\"\nimport CoolText from \"../components/CoolText\"\nimport useLocalStorageState from \"../hooks/useLocalStorageState\"\nimport useSystemClock, { ClockPrecision } from \"../hooks/useSystemClock\"\nimport ALL_TIME_ZONES from \"../ref/allTimeZones\"\n\nconst CURRENT_TIMEZONE = Intl.DateTimeFormat([]).resolvedOptions().timeZone\n\nexport default function Timezone() {\n  const systemDate = useSystemClock(ClockPrecision.SECOND)\n  const [validTimezone, setValidTimezone] = useLocalStorageState(\"timezone.alternate_timezone\", \"America/Los_Angeles\")\n\n  const localTime = timeInZone(CURRENT_TIMEZONE, systemDate)\n  const alternateTime = timeInZone(validTimezone, systemDate)\n\n  return (\n    <>\n      <div><CoolText>Your time ({CURRENT_TIMEZONE}) is {localTime}</CoolText></div>\n      <div><CoolText>Choose another timezone <select value={validTimezone} onChange={(e) => setValidTimezone(e.target.value)}>\n          {ALL_TIME_ZONES.map((tz) => <option value={tz}>{tz}</option>)}\n        </select></CoolText></div>\n      <div><CoolText>The time in {validTimezone} is {alternateTime}</CoolText></div>\n    </>\n  )\n}\n\nfunction timeInZone(timeZone: string, date: Date) {\n  return Intl.DateTimeFormat([], { timeZone, timeStyle: \"full\" }).format(date)\n}\n"],"names":["CoolTitle","children","style","fontFamily","textTransform","fontWeight","fontSize","color","CoolText","bold","useLocalStorageState","key","defaultValue","serialize","deserialize","v","initialValue","window","localStorage","getItem","isLocalObjectPopulated","value","JSON","parse","getLocalObject","useState","state","setState","setLocalStorageState","useCallback","newValue","normalizedValue","obj","stringified","stringify","setItem","setLocalObject","resetLocalStorageState","removeItem","removeLocalObject","dateSerilaizer","date","getTime","dateDeserializer","ms","Date","arraySerializer","elementSerializer","array","map","arrayDeserializer","elementDeserializer","ClockPrecision","useSystemClock","precision","SECOND","cachedTime","setCachedTime","useEffect","handle","scheduleUpdate","delay","referenceDate","millisecondsUntilNextSecond","getMilliseconds","secondsUntilNextMinute","getSeconds","MINUTE","minutesUntilNextHour","getMinutes","HOUR","millisecondsUntilNextUpdate","setTimeout","clearTimeout","CURRENT_TIMEZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","Timezone","systemDate","validTimezone","setValidTimezone","localTime","timeInZone","alternateTime","onChange","e","target","ALL_TIME_ZONES","tz","timeStyle","format"],"sourceRoot":""}